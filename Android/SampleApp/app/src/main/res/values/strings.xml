<?xml version="1.0" encoding="utf-8"?>
<resources>

    <string name="app_name">SampleApp</string>
    <string name="title_section1">Home</string>
    <string name="title_section2">Favorites</string>
    <string name="title_section3">Settings</string>
    <string name="navigation_drawer_open">Open navigation drawer</string>
    <string name="navigation_drawer_close">Close navigation drawer</string>
    <string name="action_example">Example action</string>
    <string name="action_settings">Settings</string>
    <string name="more">More</string>
    <string name="action_refresh">Refresh</string>

    <string name="drawer_open"></string>
    <string name="drawer_close"></string>
    <string name="action_websearch">Web search</string>
    <string name="hello">Hello World</string>
    <string name="app_not_available">Sorry, there\'s no web browser available</string>

    <string name="share">Share</string>
    <string name="search">Search</string>
    <string name="refresh">Refresh</string>
    <string name="settings">Settings</string>
    <string name="about">ABOUT</string>
    <string name="menu1">Menu 1</string>

    <string name="sampleHeader">Header</string>

    <string name="lorem">

         In statistical learning theory, or sometimes computational learning theory, the VC dimension (for Vapnik–Chervonenkis dimension) is a measure of the capacity of a statistical classification algorithm, defined as the cardinality of the largest set of points that the algorithm can shatter. It is a core concept in Vapnik–Chervonenkis theory, and was originally defined by Vladimir Vapnik and Alexey Chervonenkis.
Informally, the capacity of a classification model is related to how complicated it can be. For example, consider the thresholding of a high-degree polynomial: if the polynomial evaluates above zero, that point is classified as positive, otherwise as negative. A high-degree polynomial can be wiggly, so it can fit a given set of training points well. But one can expect that the classifier will make errors on other points, because it is too wiggly. Such a polynomial has a high capacity. A much simpler alternative is to threshold a linear function. This function may not fit the training set well, because it has a low capacity. This notion of capacity is made more rigorous below.

     </string>

    <string name="done">DONE</string>

</resources>
